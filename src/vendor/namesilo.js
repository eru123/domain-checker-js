const parseQuery = require('../lib/parseQuery')
const https = require('follow-redirects').https;
const stlds = [
  "com",
  "xyz",
  "top",
  "net",
  "org",
  "cc",
  "club",
  "buzz",
  "in",
  "info",
  "co",
  "icu",
  "me",
  "live",
  "us",
  "biz",
  "vip",
  "win",
  "pw",
  "tv",
  "monster",
  "work",
  "mx",
  "shop",
  "uk",
  "cyou",
  "ca",
  "cloud",
  "online",
  "site",
  "best",
  "link",
  "nl",
  "eu",
  "io",
  "app",
  "one",
  "life",
  "de",
  "today",
  "fit",
  "casa",
  "pro",
  "fun",
  "website",
  "store",
  "surf",
  "email",
  "art",
  "bid",
  "ws",
  "trade",
  "digital",
  "dev",
  "world",
  "click",
  "uno",
  "network",
  "mobi",
  "space",
  "tech",
  "asia",
  "moe",
  "date",
  "bond",
  "men",
  "la",
  "rocks",
  "stream",
  "news",
  "finance",
  "party",
  "team",
  "agency",
  "at",
  "guru",
  "blog",
  "run",
  "services",
  "review",
  "company",
  "vegas",
  "city",
  "media",
  "wtf",
  "solutions",
  "ac",
  "design",
  "ltd",
  "download",
  "directory",
  "group",
  "zone",
  "games",
  "wiki",
  "science",
  "studio",
  "center",
  "ink",
  "red",
  "works",
  "sh",
  "support",
  "ninja",
  "systems",
  "cash",
  "help",
  "church",
  "pet",
  "dog",
  "plus",
  "ooo",
  "tips",
  "vin",
  "global",
  "fyi",
  "golf",
  "loan",
  "reisen",
  "guide",
  "chat",
  "rip",
  "promo",
  "academy",
  "exchange",
  "tools",
  "marketing",
  "capital",
  "cafe",
  "money",
  "farm",
  "pink",
  "foundation",
  "family",
  "cool",
  "sale",
  "blue",
  "show",
  "faith",
  "earth",
  "house",
  "tel",
  "business",
  "social",
  "international",
  "land",
  "love",
  "video",
  "bio",
  "tours",
  "photography",
  "technology",
  "webcam",
  "expert",
  "pictures",
  "casino",
  "photos",
  "codes",
  "market",
  "consulting",
  "realty",
  "llc",
  "care",
  "coffee",
  "style",
  "host",
  "institute",
  "voyage",
  "fund",
  "ist",
  "coach",
  "lol",
  "kim",
  "ventures",
  "education",
  "express",
  "reviews",
  "events",
  "homes",
  "software",
  "watch",
  "pub",
  "estate",
  "school",
  "gallery",
  "domains",
  "report",
  "properties",
  "deals",
  "delivery",
  "rentals",
  "navy",
  "direct",
  "energy",
  "law",
  "tax",
  "press",
  "boutique",
  "town",
  "gold",
  "band",
  "gratis",
  "tube",
  "repair",
  "racing",
  "training",
  "fans",
  "taxi",
  "fitness",
  "boston",
  "gift",
  "jewelry",
  "ph",
  "photo",
  "shopping",
  "community",
  "cheap",
  "mba",
  "gay",
  "exposed",
  "fail",
  "pics",
  "ski",
  "wine",
  "productions",
  "toys",
  "dating",
  "bike",
  "enterprises",
  "partners",
  "black",
  "recipes",
  "singles",
  "restaurant",
  "vet",
  "accountant",
  "film",
  "university",
  "financial",
  "kitchen",
  "doctor",
  "supply",
  "dance",
  "immo",
  "haus",
  "army",
  "parts",
  "legal",
  "investments",
  "green",
  "engineering",
  "credit",
  "cards",
  "computer",
  "yoga",
  "vision",
  "management",
  "loans",
  "coupons",
  "football",
  "auction",
  "rodeo",
  "pizza",
  "viajes",
  "organic",
  "poker",
  "moda",
  "lawyer",
  "lgbt",
  "clothing",
  "observer",
  "miami",
  "forsale",
  "supplies",
  "lighting",
  "limited",
  "holdings",
  "mom",
  "camp",
  "fashion",
  "careers",
  "rent",
  "republican",
  "college",
  "movie",
  "baby",
  "study",
  "bar",
  "associates",
  "irish",
  "nyc",
  "soccer",
  "healthcare",
  "clinic",
  "sexy",
  "dental",
  "graphics",
  "courses",
  "solar",
  "vacations",
  "fish",
  "beer",
  "bargains",
  "industries",
  "gmbh",
  "cricket",
  "discount",
  "tires",
  "holiday",
  "wedding",
  "futbol",
  "garden",
  "gifts",
  "engineer",
  "shoes",
  "menu",
  "cab",
  "game",
  "equipment",
  "construction",
  "glass",
  "bible",
  "archi",
  "actor",
  "shiksha",
  "charity",
  "claims",
  "builders",
  "cooking",
  "cruises",
  "vodka",
  "furniture",
  "camera",
  "attorney",
  "boats",
  "autos",
  "istanbul",
  "dentist",
  "salon",
  "schule",
  "place",
  "mortgage",
  "tattoo",
  "condos",
  "kaufen",
  "villas",
  "tennis",
  "sucks",
  "democrat",
  "accountants",
  "immobilien",
  "gives",
  "audio",
  "hockey",
  "rest",
  "insure",
  "airforce",
  "contractors",
  "blackfriday",
  "flights",
  "horse",
  "hosting",
  "diamonds",
  "limo",
  "rehab",
  "vote",
  "lease",
  "hospital",
  "property",
  "christmas",
  "apartments",
  "jetzt",
  "fishing",
  "surgery",
  "yachts",
  "theater",
  "plumbing",
  "tienda",
  "catering",
  "reise",
  "memorial",
  "maison",
  "sarl",
  "bingo",
  "travel",
  "florist",
  "diet",
  "motorcycles",
  "gripe",
  "hiphop",
  "degree",
  "flowers",
  "cleaning",
  "tickets",
  "hiv",
  "creditcard",
  "security",
  "whoswho",
  "guitars",
  "juegos",
  "theatre",
  "storage",
  "protection",
  "sydney",
  "melbourne",
  "hair",
  "health",
  "skin",
  "quest",
  "dealer",
  "sbs",
  "beauty",
  "makeup",
  "bayern",
  "page",
  "feedback",
  "cfd",
  "inc",
  "london",
  "contact",
  "luxe",
  "ai"
]

const scrape = (domains) => {
  const result = []
  for (let domain of domains) {
    const { domain: sld, tld } = parseQuery(domain.domain)
    result.push({
      available: domain.available,
      sld,
      tld: "." + tld,
      currency: 'USD',
      price: Number(domain.regularPrice || domain.renewalPrice || domain.currentPrice) || 0,
    })
  }
  return result
}

const getId = (query) => new Promise((resolve, reject) => {
  const { domain, tld } = parseQuery(query)
  let domains = tld ? [`${domain}.${tld}`] : stlds.map(tl => `${domain}.${tl}`)
  var options = {
    'method': 'POST',
    'hostname': 'www.namesilo.com',
    'path': '/public/api/domains/bulk-check',
    'headers': {
      'Content-Type': 'application/json',
      'accept': 'application/json, text/plain, */*',
      'accept-language': 'en-US,en;q=0.9',
      'user-agent':
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/ 537.36(KHTML, like Gecko) Chrome/ 97.0.4692.99 Safari / 537.36',
    },
    'maxRedirects': 20
  };

  var req = https.request(options, (res) => {
    var chunks = [];
    res.on("data", (chunk) => chunks.push(chunk));
    res.on("end", () => resolve(JSON.parse(Buffer.concat(chunks).toString())?.data?.checkId));
    res.on("error", (err) => reject(err));
  });

  let postData = JSON.stringify({ domains, tlds: stlds })
  req.write(postData);
  req.end();
})

const getResults = (id) => new Promise((resolve, reject) => {
  var options = {
    'method': 'GET',
    'hostname': 'www.namesilo.com',
    'path': '/public/api/domains/results/' + id,
    'headers': {
      'accept': 'application/json, text/plain, */*',
      'accept-language': 'en-US,en;q=0.9',
      'user-agent':
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/ 537.36(KHTML, like Gecko) Chrome/ 97.0.4692.99 Safari / 537.36',
    },
    'maxRedirects': 20
  };

  var req = https.request(options, (res) => {
    var chunks = [];
    res.on("data", (chunk) => chunks.push(chunk));
    res.on("end", () => resolve(JSON.parse(Buffer.concat(chunks).toString())?.data?.domains));
    res.on("error", (err) => reject(err));
  });

  req.end();
})

module.exports = async (query) => {
  const id = await getId(query)
  const results = await getResults(id)
  return scrape(results)
}
